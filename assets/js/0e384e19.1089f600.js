"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[976],{1512:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var l=n(4848),s=n(8453);const r={sidebar_position:1},t="Getting Started",c={id:"intro",title:"Getting Started",description:"Prerequisites",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/live_cells_cpp/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Basics",permalink:"/live_cells_cpp/docs/category/basics"}},o={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuring your project",id:"configuring-your-project",level:2},{value:"Autotools",id:"autotools",level:3},{value:"CMake",id:"cmake",level:3},{value:"Using Live Cells",id:"using-live-cells",level:2}];function a(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,l.jsx)(i.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,l.jsx)(i.p,{children:"This library requires the following:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"A compiler that supports C++20."}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"The following dependencies are not required to use the library, but\nare required for running the unit tests."}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.a,{href:"https://www.boost.org/",children:"Boost Unit Test Framework"})," version 1.82"]}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(i.p,{children:"To begin using Live Cells:"}),"\n",(0,l.jsxs)(i.ol,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:["Download the ",(0,l.jsx)(i.a,{href:"https://github.com/alex-gutev/live_cells_cpp/releases/latest",children:"latest release"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"Unpack the tar archive to a directory of your choice."}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"Install the library by running the following commands in the\ndirectory where you unpacked the tar archive:"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-sh",children:"mkdir build; cd build\n../configure\nmake install\n"})}),"\n",(0,l.jsxs)(i.p,{children:["This will install Live Cells at ",(0,l.jsx)(i.code,{children:"/usr/local"}),". You can choose an\nalternative prefix with:"]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-sh",children:"../configure --prefix=/path/to/prefix\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(i.p,{children:["Live Cells should now be installed at ",(0,l.jsx)(i.code,{children:"/usr/local"})," or the prefix you've\ngiven to ",(0,l.jsx)(i.code,{children:"configure"}),"."]}),"\n",(0,l.jsx)(i.h2,{id:"configuring-your-project",children:"Configuring your project"}),"\n",(0,l.jsxs)(i.p,{children:["The Live Cells library consists of headers, installed in\n",(0,l.jsx)(i.code,{children:"<prefix>/include/live_cells"}),", and a static library ",(0,l.jsx)(i.code,{children:"liblive_cells.a"}),"\ninstalled in ",(0,l.jsx)(i.code,{children:"<prefix>/lib"}),"."]}),"\n",(0,l.jsx)(i.admonition,{type:"note",children:(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"<prefix>"})," is ",(0,l.jsx)(i.code,{children:"/usr/local"}),", unless specified otherwise with the\n",(0,l.jsx)(i.code,{children:"--prefix"})," argument to the ",(0,l.jsx)(i.code,{children:"configure"})," script."]})}),"\n",(0,l.jsx)(i.p,{children:"To use live cells in your C++ project, you'll need to do the following:"}),"\n",(0,l.jsxs)(i.ol,{children:["\n",(0,l.jsxs)(i.li,{children:["Add ",(0,l.jsx)(i.code,{children:"<prefix>/include/live_cells"})," to your include path."]}),"\n",(0,l.jsxs)(i.li,{children:["Link ",(0,l.jsx)(i.code,{children:"<prefix>/lib/liblive_cells.a"})," into your compiled binary"]}),"\n"]}),"\n",(0,l.jsx)(i.h3,{id:"autotools",children:"Autotools"}),"\n",(0,l.jsxs)(i.p,{children:["Add the following to your ",(0,l.jsx)(i.code,{children:"configure.ac"}),":"]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-sh",metastring:'title="configure.ac"',children:"AC_LIB_HAVE_LINKFLAGS(live_cells)\n"})}),"\n",(0,l.jsxs)(i.p,{children:["This searches for the ",(0,l.jsx)(i.code,{children:"liblive_cells.a"})," in the default library search\npaths (or the paths specified by the user), adds the necessary linker\noptions to the variable ",(0,l.jsx)(i.code,{children:"LIBLIVE_CELLS"})," and adds directory where the\nheader files were installed, to the project's include path."]}),"\n",(0,l.jsxs)(i.p,{children:["Add the following to your ",(0,l.jsx)(i.code,{children:"Makefile.am"})]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-makefile",metastring:'title="Makefile.am"',children:"target_LDADD = $(LIBLIVE_CELLS)\n"})}),"\n",(0,l.jsxs)(i.p,{children:["where ",(0,l.jsx)(i.code,{children:"target"})," is the name of your compilation target."]}),"\n",(0,l.jsx)(i.h3,{id:"cmake",children:"CMake"}),"\n",(0,l.jsxs)(i.p,{children:["Add the following to your ",(0,l.jsx)(i.code,{children:"CMakeLists.txt"})," file:"]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-cmake",metastring:'title="CMakeLists.txt',children:'list(APPEND CMAKE_MODULE_PATH "<prefix>/share/live_cells/cmake)\nfind_package(live_cells REQUIRED)\n'})}),"\n",(0,l.jsx)(i.admonition,{type:"note",children:(0,l.jsxs)(i.p,{children:["Substitute ",(0,l.jsx)(i.code,{children:"<prefix>"})," with the install prefix given to the ",(0,l.jsx)(i.code,{children:"configure"}),"\nscript."]})}),"\n",(0,l.jsx)(i.h2,{id:"using-live-cells",children:"Using Live Cells"}),"\n",(0,l.jsxs)(i.p,{children:["Now that your project is set up, all you need to do is include the\n",(0,l.jsx)(i.code,{children:"live_cells.hpp"})," header file:"]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-cpp",children:"#include <live_cells/live_cells.hpp>\n...\n"})}),"\n",(0,l.jsxs)(i.p,{children:["You're all set to start following the introductory\n",(0,l.jsx)(i.a,{href:"category/basics",children:"tutorial"}),","]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>c});var l=n(6540);const s={},r=l.createContext(s);function t(e){const i=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),l.createElement(r.Provider,{value:i},e.children)}}}]);